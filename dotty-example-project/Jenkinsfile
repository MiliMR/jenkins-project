pipeline { 
    agent any
    environment {
        PROJECT_PATH = 'dotty-example-project'
        REPORT_PATH = "${env.WORKSPACE}/${PROJECT_PATH}/reports/dependency-check-report.xml"
    }
    stages {
        stage('Compile') {
            steps {
                dir("${PROJECT_PATH}"){
                    sh 'sbt clean compile'
                }
            }
        }
        stage('Dependencies Check') {
            steps {
                dir("${PROJECT_PATH}"){
                    sh 'sbt dependencyCheck'
                    archiveArtifacts artifacts: "reports/**.html"
                    dependencyCheckPublisher pattern: "reports/**.xml"
                }
            }
            post{
                unstable{
                    echo 'Could not publish the report'
                }
            }
        }
        stage('Analysis Of Dependency Check Report') {
            steps {
                dir("${PROJECT_PATH}/utils"){
                    sh 'npm install'
                    script{
                        def returnedValue = sh(
                            returnStdout: true,
                            script: '''
                                npm run analyze
                            '''
                        )
                        if(returnedValue.contains('Vulnerabilities Found')) {
                            currentBuild.result = 'UNSTABLE';
                            currentBuild.description = "Vulnerabilities detected";
                       }
                    }
                }
            }
        }
    }
    post{
        always {
            echo 'One way or another, I have finished'
            deleteDir() /* clean up our workspace */
        }
    }
}
