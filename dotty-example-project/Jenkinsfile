pipeline {
    agent any
    environment {
        REPORT_PATH = '/target/scala-0.24/dependency-check-report.xml'
        PROJECT_PATH = 'dotty-example-project'
    }
    stages {
        stage('Compile') {
            steps {
                dir("${PROJECT_PATH}"){
                    sh 'sbt clean compile'
                }
            }
            post{
                success{
                    echo 'Compile done'
                    sh 'rm -rf dotty-example-project/target/scala-0.24/dependency-check-report.xml'
                }
            }
        }
        stage('Dependencies Check') {
            steps {
                dir("${PROJECT_PATH}"){
                    sh 'sbt dependencyCheck'
                    archiveArtifacts artifacts: "**${REPORT_PATH}", fingerprint: true, onlyIfSuccessful: true
                    dependencyCheckPublisher pattern: "**${REPORT_PATH}"
                }
            }
            post{
                unstable{
                    echo 'Could not publish the report'
                }
            }
        }
        stage('Analysis Of Dependency Check Report') {
            steps {
                dir("${PROJECT_PATH}/utils"){
                    sh 'printenv'
                    sh 'npm install'
                    sh 'npm test'
                }
                script{
                    if(currentBuild.result == 'FAILURE'){
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
            post{
                unstable{
                    script {
                        currentBuild.description = 'Vulnerabilities detected'
                    }
                }
            }
        }
    }
}
